{% extends 'docs' %}


{%- block title -%}
    Documentation | PHPSerializer.com
{%- endblock -%}

{%- block sidebar -%}
{%- include 'pages/documentation_sidebar'-%}
{%- endblock -%}


{%- block content -%}
<h1 id="introduction">Quick Start</h1>

<h2>Introduction</h2>

<h3>PHP: serialize() and unserialize()</h3>
<p>These native functions rely on having the serialized classes loaded and available at runtime and tie your unserialization process to a PHP platform.</p>

<p>If the serialized string contains a reference to a class that cannot be instantiated (e.g. class was renamed, moved namespace, removed or changed to abstract) PHP will immediately die with a fatal error.</p>

<p>Is this a problem? Yes it is. Serialized data is now <strong>unusable</strong>.</p>

<p><strong>Using the PHP Serializer libraries will result in outputting a message that is better readable and understandable for humans, but more importantly, it's platform-independent.</strong></p>


<hr>

<h2 id="features">Features</h2>

<ul>
    <li>Serialize to <strong>JSON</strong>, <strong>XML</strong> and <strong>YAML</strong> formats.</li>
    <li>Serializes <strong>exact copies</strong> of the object provided:
        <ul>
            <li>All object properties, public, protected and private are serialized.</li>
            <li>All properties from the current object, <strong>including inherited properties</strong> are read and serialized.</li>
        </ul>
    </li>
    <li>Handles <strong>internal class serialization</strong> for objects such as <strong>SplFixedArray</strong> or classes <strong>implementing Traversable</strong>.</li>
    <li>Basic Data Transformers provided to convert objects to different output formats.</li>
    <li>Production-ready.</li>
    <li><strong>Extensible:</strong> easily write your out Serializer format or data Transformers.</li>
</ul>


<hr>

<h2>Requirements</h2>
<p>All PHP Serializer libraries require at least PHP version 5.5 or above.</p>

<p>It's been tested on PHP 7.0 and the PHP nightly builds.</p>

<hr>

<h2 id="installation">Installation</h2>

<p>This library can be easily installed via <a href="https://getcomposer.org/">Composer</a>. If you're not using Composer, please download:</p>

<pre><code class="bash">$ curl -sS https://getcomposer.org/installer | php</code></pre>

<p>Now, in a command console execute the following command to download the latest stable version of the PHP Serializer:</p>

<pre><code class="bash">$ php composer.phar install nilportugues/serializer</code></pre>

<p>And you're done.</p>



{%- endblock -%}